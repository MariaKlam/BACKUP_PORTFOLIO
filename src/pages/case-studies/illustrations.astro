---
import Base from "../../layouts/Base.astro";
import "../../styles/case-base.css";

const title = "Case Study: Visual explorations";
---
<Base title={title} noWrap={false} hideFooter={false}>
  <header class="case-hero">
    <h1>Visual explorations</h1>
    <p class="meta">Graphic Design • Illustration • Art Direction • 2013–2025</p>
    <p class="lede">
      My background in fine arts and a BA from the Estonian Academy of Arts have strongly influenced my visual design approach. 
      These illustrations represent an ongoing exploration of composition, rhythm, and atmosphere — principles that also guide my work in UX and UI. 
      I combine traditional techniques with digital tools like Adobe Dimension and vector-based workflows to create expressive, balanced visuals 
      that merge artistic intuition with design structure.
    </p>
  </header>

  <article class="container-narrow doc-grid tokens-case">
    <div class="doc-main">
      
      <section class="hero-vertical" aria-label="Featured previews">
        <button class="shot-tile ar-21x9"
          data-full="/images/visual/kompa.jpg"
          data-title="Visual Composition"
          data-cap="<p><strong>Exploring balance and contrast.</strong></p>
          <ul>
            <li>Combining abstract form and rhythm to create visual flow.</li>
            <li>Study of repetition and focal hierarchy.</li>
            <li>Merging design system logic with artistic texture.</li>
          </ul>">
          <img loading="lazy" src="/images/visual/kompa.jpg" alt="Visual composition exploration">
        </button>
      </section>

      <section id="s-context">
        <h2>Context & Purpose</h2>
        <p>
          Illustration has always been part of how I think and design. My education in fine arts gave me a foundation in composition, light, and storytelling — 
          skills that translate directly into product design and interface clarity. These explorations help me maintain an emotional and narrative sensibility 
          within structured, system-driven work.
        </p>
      </section>

      <section id="s-approach">
        <h2>Approach</h2>
        <ul>
          <li>Experimenting with mixed media — from ink and graphite to 3D renders and vector layers.</li>
          <li>Focusing on composition, movement, and focal points to communicate emotion.</li>
          <li>Adapting illustration methods to digital product contexts: icons, hero imagery, and editorial visuals.</li>
          <li>Integrating storytelling and atmosphere into structured layouts and UI patterns.</li>
        </ul>
      </section>

      <section id="s-outcomes">
        <h2>Outcomes</h2>
        <ul>
          <li>Developed a personal visual language that connects artistic intuition with interface design principles.</li>
          <li>Improved understanding of rhythm, spacing, and balance — directly influencing my UI layout work.</li>
          <li>Created cohesive visual systems for campaigns and digital experiences through illustration.</li>
        </ul>
      </section>

      <section id="s-role">
        <h2>My Background</h2>
        <ul>
          <li>Bachelor of Arts in Fine Arts — Estonian Academy of Arts.</li>
          <li>Professional experience across art direction, illustration, and interface design.</li>
          <li>Bridging artistic craft with structured design systems in UX/UI environments.</li>
          <li>Continuous exploration of how emotional tone and aesthetics can support usability and clarity.</li>
        </ul>
      </section>

       <p class="flex-col">
        <a class="btn link-btn" href="/case-studies/nav-system">
          <span class="btn-label">Check a demo of unified navigation menu</span>
          <i class="ri-arrow-right-line"></i>
        </a>
        <a class="btn link-btn" href="/case-studies/dash-case">
            <span class="btn-label">Dashboards and app interfaces</span>
          <i class="ri-arrow-right-line"></i>
        </a>
      </p>
    </div>

    <aside class="doc-aside feature-card">
      <nav class="shots-grid" aria-label="Visual gallery">
        <!-- You can later update the titles and captions with illustration-specific descriptions -->
        <button class="shot-tile"
          data-full="/images/visual/supernova.jpg"
          data-title="Dream & Motion"
          data-cap="<p>Dynamic composition inspired by movement and sound.</p>">
          <img src="/images/visual/supernova.jpg" alt="Illustration exploring motion and balance">
        </button>

        <button class="shot-tile"
          data-full="/images/visual/divein.jpg"
          data-title="Light Study"
          data-cap="<p>Exploring contrast between structure and softness.</p>">
          <img src="/images/visual/divein.jpg" alt="Light study illustration">
        </button>

        <button class="shot-tile"
          data-full="/images/visual/metskits.jpg"
          data-title="Urban Rhythm"
          data-cap="<p>Experimenting with form, architecture, and repetition.</p>">
          <img src="/images/visual/metskits.jpg" alt="Urban rhythm illustration">
        </button>

        <button class="shot-tile"
          data-full="/images/visual/trapped.jpg"
          data-title="Concept Illustration"
          data-cap="<p>Surreal imagery blending structure with emotion.</p>">
          <img src="/images/visual/trapped.jpg" alt="Conceptual artwork">
        </button>

        <button class="shot-tile"
          data-full="/images/visual/tartu.jpg"
          data-title="Poster Composition"
          data-cap="<p>Typography and figure interaction study.</p>">
          <img src="/images/visual/tartu.jpg" alt="Poster composition artwork">
        </button>

        <button class="shot-tile"
          data-full="/images/visual/unblock.jpg"
          data-title="Editorial Illustration"
          data-cap="<p>Illustration for story-driven content.</p>">
          <img src="/images/visual/unblock.jpg" alt="Editorial illustration">
        </button>

        <button class="shot-tile"
          data-full="/images/visual/tekhnasia.jpg"
          data-title="Event Poster"
          data-cap="<p>Campaign artwork for Tekhnasia event.</p>">
          <img src="/images/visual/tekhnasia.jpg" alt="Event poster illustration">
        </button>

        <button class="shot-tile"
          data-full="/images/visual/dnbb.jpg"
          data-title="Music & Form"
          data-cap="<p>Graphical study of rhythm and repetition.</p>">
          <img src="/images/visual/dnbb.jpg" alt="Music-inspired illustration">
        </button>

        <button class="shot-tile"
          data-full="/images/visual/vinni.png"
          data-title="Character Concept"
          data-cap="<p>Character exploration with stylized composition.</p>">
          <img src="/images/visual/vinni.png" alt="Character concept art">
        </button>

        <button class="shot-tile"
          data-full="/images/visual/koos.jpg"
          data-title="Collaboration Series"
          data-cap="<p>Collaborative artwork merging multiple styles.</p>">
          <img src="/images/visual/koos.jpg" alt="Collaborative illustration">
        </button>
      </nav>
      
    </aside>
  <!-- Lightweight lightbox (scoped to .tokens-case) -->
    <!-- Lightweight lightbox (scoped to .tokens-case) -->
<div class="tokens-lightbox" aria-hidden="true">
  <div class="tokens-lightbox__dialog" role="dialog" aria-modal="true" aria-label="Image preview">
    <button class="tokens-lightbox__close" type="button" aria-label="Close (Esc)">×</button>
    <button class="tokens-lightbox__nav tokens-lightbox__prev" aria-label="Previous image">‹</button>
    <button class="tokens-lightbox__nav tokens-lightbox__next" aria-label="Next image">›</button>

    <div class="tokens-lightbox__media">
      <img class="tokens-lightbox__img" alt="" />
    </div>
    <aside class="tokens-lightbox__meta">
      <h4 class="tokens-lightbox__title"></h4>
      <div class="tokens-lightbox__cap"></div>
    </aside>
  </div>
</div>
  </article>
  
<script type="module">
(() => {
  const scope = document.querySelector('.tokens-case');
  if (!scope) return;

  const lb       = scope.querySelector('.tokens-lightbox');
  const dlg      = lb.querySelector('.tokens-lightbox__dialog');
  const imgEl    = lb.querySelector('.tokens-lightbox__img');
  const titleEl  = lb.querySelector('.tokens-lightbox__title');
  const capEl    = lb.querySelector('.tokens-lightbox__cap');
  const closeBtn = lb.querySelector('.tokens-lightbox__close');
  const prevBtn  = lb.querySelector('.tokens-lightbox__prev');
  const nextBtn  = lb.querySelector('.tokens-lightbox__next');

  const tiles = Array.from(scope.querySelectorAll('.shot-tile'));
  let currentIndex = -1;
  let lastFocus = null;

  function extractDataFrom(el) {
    const carrier = el.closest('[data-full],[data-cap],[data-title]') || el;
    const img     = (el.tagName === 'IMG') ? el : carrier.querySelector('img');
    const src   = carrier.getAttribute('data-full') || img?.currentSrc || img?.src || '';
    const title = carrier.getAttribute('data-title') || img?.alt || '';
    const cap   = carrier.getAttribute('data-cap') || img?.title || '';
    return { src, title, cap };
  }

  function openLightbox(index) {
    currentIndex = index;
    const { src, title, cap } = extractDataFrom(tiles[index]);
    lastFocus = document.activeElement;
    imgEl.src = src;
    titleEl.textContent = title;
    capEl.innerHTML = cap;
    lb.classList.add('is-open');
    document.documentElement.classList.add('tokens-lightbox-open');
    closeBtn.focus();
  }

  function closeLightbox() {
    lb.classList.remove('is-open');
    document.documentElement.classList.remove('tokens-lightbox-open');
    imgEl.src = ''; titleEl.textContent = ''; capEl.textContent = '';
    if (lastFocus && lastFocus.focus) lastFocus.focus();
  }

  function showNext() {
    if (currentIndex === -1) return;
    currentIndex = (currentIndex + 1) % tiles.length;
    openLightbox(currentIndex);
  }

  function showPrev() {
    if (currentIndex === -1) return;
    currentIndex = (currentIndex - 1 + tiles.length) % tiles.length;
    openLightbox(currentIndex);
  }

  scope.addEventListener('click', e => {
    const tile = e.target.closest('.shot-tile');
    if (tile) {
      e.preventDefault();
      openLightbox(tiles.indexOf(tile));
    }
  });

  closeBtn.addEventListener('click', closeLightbox);
  prevBtn.addEventListener('click', showPrev);
  nextBtn.addEventListener('click', showNext);
  lb.addEventListener('click', e => { if (e.target === lb) closeLightbox(); });

  document.addEventListener('keydown', e => {
    if (!lb.classList.contains('is-open')) return;
    if (e.key === 'Escape') closeLightbox();
    if (e.key === 'ArrowRight') showNext();
    if (e.key === 'ArrowLeft') showPrev();
  });
})();
</script>

</Base>